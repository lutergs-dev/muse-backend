spring:
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    producer:
      client-id: ${KAFKA_CLIENT_ID}
    properties:
      sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username='${KAFKA_API_KEY:api_key}' password='${KAFKA_API_SECRET:api_secret}';
    streams:
      application-id: ${KAFKA_CLIENT_ID}

  datasource:
    username: ${ORACLE_USERNAME}
    password: ${ORACLE_PASSWORD}
    url: jdbc:oracle:thin:@${ORACLE_DESCRIPTOR_STRING:oracle-descript-string}

  data:
    redis:
      sentinel:
        master: ${REDIS_SENTINEL_MASTER_NAME}
        nodes: ${REDIS_SENTINEL_NODES}

custom:
  kafka:
    http:
      url:
        protocol-type: http
        host-name: ${KUBERNETES_HOSTNAME}
        service-name: ${KUBERNETES_SERVICE}
        namespace: ${KUBERNETES_NAMESPACE}
    streams:
      communicate-key: ${STREAMS_COMMUNICATION_KEY}
      current-machine-key: ${STREAMS_MACHINE_KEY}
      input-topic-name: ${STREAMS_INPUT_TOPIC_NAME}
      store:
        ttl-store-name: ${STREAMS_TTL_STORE}
        user-now-playing-store-name: ${STREAMS_USER_NOW_PLAYING_STORE}
      time:
        stop-timeout-second: ${STREAMS_STOP_TIMEOUT_SECOND}
        scan-frequency-second: ${STREAMS_SCAN_FREQUENCY_SECOND}
  web:
    domain: ${MUSE_DOMAIN}
    protocol-type: https
    key-location:
      public: ${RSA_PUBLIC_KEY_PATH}
      private: ${RSA_PRIVATE_KEY_PATH}
    token-expire:
      access-token: ${ACCESS_TOKEN_EXPIRE_SECOND}
      refresh-token: ${REFRESH_TOKEN_EXPIRE_SECOND}
